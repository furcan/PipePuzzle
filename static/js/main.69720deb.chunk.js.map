{"version":3,"sources":["application/constants/index.ts","application/helpers/index.ts","application/api/Socket.ts","application/redux/actions/puzzleActions.ts","application/redux/reducers/puzzleReducer.ts","application/redux/reducers/index.ts","presentation/components/header/Header.tsx","presentation/components/footer/Footer.tsx","presentation/components/layout/Layout.tsx","presentation/components/welcome/Welcome.tsx","presentation/components/game/partials/GameLoading.tsx","presentation/components/game/partials/GameError.tsx","presentation/components/game/partials/GameOver.tsx","application/enumerations/index.ts","presentation/components/game/partials/GameActions.tsx","presentation/components/game/partials/GameNextLevel.tsx","presentation/components/game/partials/GamePuzzle.tsx","presentation/components/game/Game.tsx","presentation/App.tsx","index.tsx"],"names":["constants","name","urlWebSocket","commandHelp","commandNew","commandMap","commandRotate","commandVerify","responseNewIsOk","responseRotateIsOk","responseMapIsOk","responseVerifyIsOk","responseVerifyIsOkPassword","responseVerifyIsOverAttempt","remainingValidationAttempt","maximumGameLevel","achievementLevel1","achievementLevel2","achievementLevel3","achievementLevel4","achievementLevel5","achievementLevel6","loading","failure","copyright","levelPrefix","buttonValidate","buttonGiveUp","buttonReturn","buttonNext","validationRemainingAttempt","nextLevel","gameIsOver","gameIsFinished","welcomeTitle","welcomeDescription","welcomeLevel","welcomeAchievement","welcomePlay","addSomeDelayAsync","milliseconds","Promise","resolve","setTimeout","createPuzzleMapFromSocketMessage","message","replace","trim","split","map","x","localStorageGetItem","key","window","localStorage","getItem","Socket","webSocketUrl","_webSocketUrl","webSocketOnOpenAsync","webSocket","a","onopen","onerror","webSocketOnMessageAsync","onmessage","event","data","webSocketOnCloseAsync","onclose","readyState","createNewSocketAndPuzzleAsync","gameLevel","WebSocket","Error","send","newIsOk","includes","newIsMap","startsWith","puzzleData","rotateExistingPuzzleAsync","positionX","positionY","rotateIsOk","rotateIsMap","verifyExistingPuzzleAsync","isVerified","response","isCorrect","isGameOver","levelPassword","password","pop","value","setItem","goToNextLevelOfPuzzleAsync","maxNextLevel","closeWebSocketAsync","close","this","rdxActionTypes","puzzleStarted","type","actionGameLevel","puzzleLoading","puzzleFailed","rdxReturnToWelcomeAsync","dispatch","rdxSelectorPuzzle","state","puzzleReducer","puzzleInitialState","puzzleIsWelcome","puzzleLevel","puzzleLevelPassword","puzzleIsStarted","puzzleIsOver","puzzleIsLoading","puzzleIsError","puzzleWebSocket","undefined","puzzleRemainingValidationAttempt","puzzleIsNextLevelAvailable","appReducers","combineReducers","action","actionData","actionWebSocket","actionGamePassword","Header","className","width","height","viewBox","xmlns","fillRule","d","fill","id","rx","y","Footer","Date","getFullYear","Layout","children","Welcome","useDispatch","buttonStartHandler","rdxStartPuzzleAsync","Object","entries","localKeyIndex","localKeyValue","levelAchievement","prevLevelHasAchieved","levelCanPlay","onClick","GameLoading","GameError","useSelector","GameOver","EWebSocketReadyState","mapWebSocketReadyState","Map","CONNECTING","OPEN","CLOSING","CLOSED","GameActions","enumeration","validation","get","GameNextLevel","GamePuzzle","useState","stateValidateAttempt","setStateValidateAttempt","stateBounceClassName","setStateBounceClassName","useEffect","toggleClassDelay","clearTimeout","buttonRotateHandler","rdxRotateExistingPuzzleAsync","row","rowIndex","item","itemIndex","Game","useLayoutEffect","App","PipePuzzleApp","store","createStore","composeWithDevTools","applyMiddleware","thunk","StrictMode","pipePuzzleRootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.69720deb.chunk.js","sourcesContent":["interface IConstants {\n  app: {\n    name: string;\n  };\n  api: {\n    urlWebSocket: string;\n    commandHelp: string;\n    commandNew: string;\n    commandMap: string;\n    commandRotate: string;\n    commandVerify: string;\n    responseNewIsOk: string;\n    responseRotateIsOk: string;\n    responseMapIsOk: string;\n    responseVerifyIsOk: string;\n    responseVerifyIsOkPassword: string;\n    responseVerifyIsOverAttempt: string;\n    remainingValidationAttempt: number;\n    maximumGameLevel: number;\n  };\n  localStorageKeyPrefix: string;\n  localStorageKeys: {\n    achievementLevel1: string;\n    achievementLevel2: string;\n    achievementLevel3: string;\n    achievementLevel4: string;\n    achievementLevel5: string;\n    achievementLevel6: string;\n  };\n  messages: {\n    loading: string;\n    failure: string;\n  };\n  text: {\n    levelPrefix: string;\n    copyright: string;\n    buttonValidate: string;\n    buttonGiveUp: string;\n    buttonReturn: string;\n    buttonNext: string;\n    validationRemainingAttempt: string;\n    nextLevel: string;\n    gameIsOver: string;\n    gameIsFinished: string;\n    welcomeTitle: string;\n    welcomeDescription: string;\n    welcomeLevel: string;\n    welcomeAchievement: string;\n    welcomePlay: string;\n  };\n}\n\nconst constants: IConstants = {\n  app: {\n    name: 'Pipe Puzzle',\n  },\n  api: {\n    urlWebSocket: 'wss://hometask.eg1236.com/game-pipes/',\n    commandHelp: 'help', // help - lists other commands\n    commandNew: 'new', // new <l> - chooses the game level, <1|6>\n    commandMap: 'map', // map - returns the current map\n    commandRotate: 'rotate', // rotate <x> <y> - rotates the tile at coordinates\n    commandVerify: 'verify', // verify - verifies if the current solution is a valid one (if yes, it will return a level password).\n    responseNewIsOk: 'new: OK',\n    responseRotateIsOk: 'rotate: OK',\n    responseMapIsOk: 'map:',\n    responseVerifyIsOk: 'verify: Correct!',\n    responseVerifyIsOkPassword: 'Password:',\n    responseVerifyIsOverAttempt: 'verify: Only 10',\n    remainingValidationAttempt: 12,\n    maximumGameLevel: 6,\n  },\n  localStorageKeyPrefix: 'pipepuzzle_achievement_',\n  localStorageKeys: {\n    achievementLevel1: 'pipepuzzle_achievement_1',\n    achievementLevel2: 'pipepuzzle_achievement_2',\n    achievementLevel3: 'pipepuzzle_achievement_3',\n    achievementLevel4: 'pipepuzzle_achievement_4',\n    achievementLevel5: 'pipepuzzle_achievement_5',\n    achievementLevel6: 'pipepuzzle_achievement_6',\n  },\n  messages: {\n    loading: 'Please wait...',\n    failure: 'Something went wrong. Please try again.',\n  },\n  text: {\n    copyright: 'All rights reserved.',\n    levelPrefix: 'Level',\n    buttonValidate: 'Validate',\n    buttonGiveUp: 'Give Up!',\n    buttonReturn: 'Return',\n    buttonNext: 'Next Level',\n    validationRemainingAttempt: 'Remaining of the validation attempt is:',\n    nextLevel: 'Well done! You have achieved:',\n    gameIsOver: 'Game is over! You may start again.',\n    gameIsFinished: 'You have finished the game. \\nYou can be the next Einstein!',\n    welcomeTitle: 'Welcome!',\n    welcomeDescription: 'You may choose a level to start.',\n    welcomeLevel: 'Level',\n    welcomeAchievement: 'Achievement',\n    welcomePlay: 'Play',\n  },\n};\n\nexport type {\n  IConstants,\n};\n\nexport {\n  constants,\n};\n","import { TSocketPuzzleData } from 'application/api';\n\nconst addSomeDelayAsync = (milliseconds?: number): Promise<void> => new Promise(resolve => setTimeout(() => { resolve(); }, milliseconds || 1000));\n\nconst createPuzzleMapFromSocketMessage = (message: string): TSocketPuzzleData => {\n  return message.replace('map:', '')?.trim()?.split('\\n')?.map((x: string) => x?.trim()?.split(''));\n};\n\nconst localStorageGetItem = (key: string): string | null => {\n  return window.localStorage.getItem(key) || null;\n};\n\nconst localStorageSetItem = (key: string, value: string): void => {\n  window.localStorage.setItem(key, value);\n};\n\nexport {\n  addSomeDelayAsync,\n  createPuzzleMapFromSocketMessage,\n  localStorageGetItem,\n  localStorageSetItem,\n};\n","import { constants } from 'application/constants';\nimport { addSomeDelayAsync, createPuzzleMapFromSocketMessage, localStorageSetItem } from 'application/helpers';\n\ntype TSocketPuzzleData = string[][];\n\ninterface ISocketCreateNewAndPuzzle {\n  puzzleData: TSocketPuzzleData;\n  webSocket: WebSocket;\n}\n\ninterface ISocketRotatePuzzle {\n  webSocket: WebSocket;\n  positionX: number;\n  positionY: number;\n}\n\ninterface ISocketVerifyPuzzle {\n  isCorrect: boolean;\n  isGameOver: boolean;\n  levelPassword: string;\n}\n\nclass Socket {\n  constructor(webSocketUrl?: string) {\n    this._webSocketUrl = webSocketUrl || this._webSocketUrl;\n  }\n  private _webSocketUrl: string = constants.api.urlWebSocket;\n\n  private webSocketOnOpenAsync = async (webSocket: WebSocket): Promise<boolean> => new Promise((resolve) => {\n    webSocket.onopen = () => {\n      resolve(true);\n    };\n    webSocket.onerror = () => {\n      resolve(false);\n    };\n  });\n\n  private webSocketOnMessageAsync = async (webSocket: WebSocket): Promise<string | null> => new Promise((resolve) => {\n    webSocket.onmessage = (event: MessageEvent) => {\n      const message = event.data || '';\n      resolve(message);\n    };\n    webSocket.onerror = () => {\n      resolve(null);\n    };\n  });\n\n  private webSocketOnCloseAsync = async (webSocket: WebSocket): Promise<number | null> => new Promise((resolve) => {\n    webSocket.onclose = () => {\n      resolve(webSocket.readyState);\n    };\n    webSocket.onerror = () => {\n      resolve(null);\n    };\n  });\n\n  createNewSocketAndPuzzleAsync = async (gameLevel: number): Promise<ISocketCreateNewAndPuzzle | null> => {\n    try {\n      await addSomeDelayAsync(360);\n\n      const webSocket = new WebSocket(this._webSocketUrl);\n      const isOpen = await this.webSocketOnOpenAsync(webSocket);\n      if (!isOpen) {\n        throw new Error();\n      }\n\n      webSocket.send(`${constants.api.commandNew} ${gameLevel}`);\n      const newIsOk = await this.webSocketOnMessageAsync(webSocket);\n      if (!newIsOk?.includes(constants.api.responseNewIsOk)) {\n        throw new Error();\n      }\n\n      webSocket.send(constants.api.commandMap);\n      const newIsMap = await this.webSocketOnMessageAsync(webSocket);\n      if (!newIsMap?.startsWith(constants.api.responseMapIsOk)) {\n        throw new Error();\n      }\n\n      const puzzleData = createPuzzleMapFromSocketMessage(newIsMap);\n      return {\n        puzzleData,\n        webSocket,\n      };\n    } catch (error) {\n      return null;\n    }\n  };\n\n  rotateExistingPuzzleAsync = async ({ webSocket, positionX, positionY }: ISocketRotatePuzzle): Promise<TSocketPuzzleData | null> => {\n    try {\n      webSocket.send(`${constants.api.commandRotate} ${positionX} ${positionY}`);\n      const rotateIsOk = await this.webSocketOnMessageAsync(webSocket);\n      if (!rotateIsOk?.includes(constants.api.responseRotateIsOk)) {\n        throw new Error();\n      }\n\n      webSocket.send(constants.api.commandMap);\n      const rotateIsMap = await this.webSocketOnMessageAsync(webSocket);\n      if (!rotateIsMap?.startsWith(constants.api.responseMapIsOk)) {\n        throw new Error();\n      }\n\n      const puzzleData = createPuzzleMapFromSocketMessage(rotateIsMap);\n      return puzzleData;\n\n    } catch (error) {\n      return null;\n    }\n  };\n\n  verifyExistingPuzzleAsync = async (webSocket: WebSocket, gameLevel: number): Promise<ISocketVerifyPuzzle | null> => {\n    try {\n      webSocket.send(constants.api.commandVerify);\n      const isVerified = await this.webSocketOnMessageAsync(webSocket);\n\n      // is has an error, etc...\n      if (!isVerified) {\n        throw new Error();\n      }\n\n      // base response, also this is for \"is not ok\"\n      let response: ISocketVerifyPuzzle = {\n        isCorrect: false,\n        isGameOver: false,\n        levelPassword: '',\n      };\n\n      // is over attempt\n      if (isVerified?.includes(constants.api.responseVerifyIsOverAttempt)) {\n        response = {\n          isCorrect: false,\n          isGameOver: true,\n          levelPassword: '',\n        };\n      }\n\n      // is puzzle verified\n      if (isVerified?.includes(constants.api.responseVerifyIsOk)) {\n        const password = isVerified.split(constants.api.responseVerifyIsOkPassword).pop()?.trim() || '';\n        localStorageSetItem(`${constants.localStorageKeyPrefix}${gameLevel}`, password);\n\n        response = {\n          isCorrect: true,\n          isGameOver: false,\n          levelPassword: password,\n        };\n      }\n\n      return response;\n\n    } catch (error) {\n      return null;\n    }\n  };\n\n  goToNextLevelOfPuzzleAsync = async (webSocket: WebSocket, nextLevel: number): Promise<TSocketPuzzleData | null> => {\n    try {\n      await addSomeDelayAsync(360);\n\n      const maxNextLevel = nextLevel > constants.api.maximumGameLevel ? constants.api.maximumGameLevel : nextLevel;\n      webSocket.send(`${constants.api.commandNew} ${maxNextLevel}`);\n\n      const newIsOk = await this.webSocketOnMessageAsync(webSocket);\n      if (!newIsOk?.includes(constants.api.responseNewIsOk)) {\n        throw new Error();\n      }\n\n      webSocket.send(constants.api.commandMap);\n      const newIsMap = await this.webSocketOnMessageAsync(webSocket);\n      if (!newIsMap?.startsWith(constants.api.responseMapIsOk)) {\n        throw new Error();\n      }\n\n      const puzzleData = createPuzzleMapFromSocketMessage(newIsMap);\n      return puzzleData;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  closeWebSocketAsync = async (webSocket: WebSocket): Promise<number | null> => {\n    try {\n      webSocket.close();\n      const response = await this.webSocketOnCloseAsync(webSocket);\n      if (response !== null) {\n        return response;\n      } else {\n        throw new Error();\n      }\n    } catch (error) {\n      return null;\n    }\n  };\n}\n\nexport type {\n  TSocketPuzzleData,\n  ISocketCreateNewAndPuzzle,\n  ISocketRotatePuzzle,\n};\n\nexport { Socket };\n","import { Socket, ISocketRotatePuzzle } from 'application/api';\n\nimport { TReduxPuzzleData, IReduxPuzzleActionTypes, IReduxPuzzleActions, IReduxPuzzleState, IPuzzleDispatch, Dispatch } from 'application/redux';\n\n\nconst rdxActionTypes: IReduxPuzzleActionTypes = {\n  PUZZLE_STARTED: 'PUZZLE_STARTED',\n  PUZZLE_RETURNED: 'PUZZLE_RETURNED',\n  PUZZLE_LOADING: 'PUZZLE_LOADING',\n  PUZZLE_FAILED: 'PUZZLE_FAILED',\n  PUZZLE_CREATED: 'PUZZLE_CREATED',\n  PUZZLE_UPDATED: 'PUZZLE_UPDATED',\n  PUZZLE_GAMEOVER: 'PUZZLE_GAMEOVER',\n  PUZZLE_VALIDATIONATTEMPTDECREASED: 'PUZZLE_VALIDATIONATTEMPTDECREASED',\n  PUZZLE_NEXTLEVELAVAILABLE: 'PUZZLE_NEXTLEVELAVAILABLE',\n  PUZZLE_NEXTLEVELCREATED: 'PUZZLE_NEXTLEVELCREATED',\n};\n\n\nconst puzzleStarted = (gameLevel: number): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_STARTED,\n  actionGameLevel: gameLevel,\n});\n\nconst puzzleReturned = (): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_RETURNED,\n});\n\nconst puzzleLoading = (): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_LOADING,\n});\n\nconst puzzleFailed = (): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_FAILED,\n});\n\nconst puzzleCreated = (data: TReduxPuzzleData, webSocket: WebSocket): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_CREATED,\n  actionData: data,\n  actionWebSocket: webSocket,\n});\n\nconst puzzleUpdated = (data: TReduxPuzzleData): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_UPDATED,\n  actionData: data,\n});\n\nconst puzzleGameOver = (): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_GAMEOVER,\n});\n\nconst puzzleDecreaseValidationAttempt = (): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_VALIDATIONATTEMPTDECREASED,\n});\n\nconst puzzleNextLevelAvailability = (data: string): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_NEXTLEVELAVAILABLE,\n  actionGamePassword: data,\n});\n\nconst puzzleNextLevelCreated = (data: TReduxPuzzleData): IReduxPuzzleActions => ({\n  type: rdxActionTypes.PUZZLE_NEXTLEVELCREATED,\n  actionData: data,\n});\n\n\nconst rdxStartPuzzleAsync = (gameLevel: number): IPuzzleDispatch => async (dispatch: Dispatch<IReduxPuzzleActions>) => {\n  dispatch(puzzleStarted(gameLevel));\n};\n\nconst rdxReturnToWelcomeAsync = (webSocket: WebSocket): IPuzzleDispatch => async (dispatch: Dispatch<IReduxPuzzleActions>) => {\n  try {\n    const response = await new Socket().closeWebSocketAsync(webSocket);\n    if (response !== null) {\n      dispatch(puzzleReturned());\n    } else {\n      throw new Error();\n    }\n  } catch (exception) {\n    dispatch(puzzleFailed());\n  }\n};\n\nconst rdxCreateWebSocketAndPuzzleAsync = (gameLevel: number): IPuzzleDispatch => async (dispatch: Dispatch<IReduxPuzzleActions>) => {\n  dispatch(puzzleLoading());\n  try {\n    const response = await new Socket().createNewSocketAndPuzzleAsync(gameLevel);\n    if (response instanceof Object) {\n      dispatch(puzzleCreated(response.puzzleData, response.webSocket));\n    } else {\n      throw new Error();\n    }\n  } catch (exception) {\n    dispatch(puzzleFailed());\n  }\n};\n\nconst rdxRotateExistingPuzzleAsync = ({ webSocket, positionX, positionY }: ISocketRotatePuzzle): IPuzzleDispatch => async (dispatch: Dispatch<IReduxPuzzleActions>) => {\n  try {\n    const puzzleData = await new Socket().rotateExistingPuzzleAsync({ webSocket, positionX, positionY });\n    if (puzzleData) {\n      dispatch(puzzleUpdated(puzzleData));\n    } else {\n      throw new Error();\n    }\n  } catch (exception) {\n    dispatch(puzzleFailed());\n  }\n};\n\nconst rdxValidateExistingPuzzleAsync = (webSocket: WebSocket, gameLevel: number): IPuzzleDispatch => async (dispatch: Dispatch<IReduxPuzzleActions>) => {\n  try {\n    const validation = await new Socket().verifyExistingPuzzleAsync(webSocket, gameLevel);\n\n    // has an error\n    if (!validation) {\n      throw new Error();\n    }\n\n    // is not correct\n    if (!validation.isCorrect) {\n      dispatch(puzzleDecreaseValidationAttempt());\n    }\n\n    // is game over\n    if (validation.isGameOver) {\n      dispatch(puzzleGameOver());\n    }\n\n    // is correct\n    if (validation.isCorrect) {\n      dispatch(puzzleNextLevelAvailability(validation.levelPassword));\n    }\n\n  } catch (exception) {\n    dispatch(puzzleFailed());\n  }\n};\n\nconst rdxGoToNextLevelOfPuzzleAsync = (webSocket: WebSocket, gameLevel: number): IPuzzleDispatch => async (dispatch: Dispatch<IReduxPuzzleActions>) => {\n  dispatch(puzzleLoading());\n  try {\n    const response = await new Socket().goToNextLevelOfPuzzleAsync(webSocket, (gameLevel + 1));\n    if (response) {\n      dispatch(puzzleNextLevelCreated(response));\n    } else {\n      throw new Error();\n    }\n  } catch (exception) {\n    dispatch(puzzleFailed());\n  }\n};\n\nconst rdxSelectorPuzzle = (state: IReduxPuzzleState): IReduxPuzzleState => state.puzzleReducer;\n\nexport {\n  rdxActionTypes,\n  rdxSelectorPuzzle,\n  rdxStartPuzzleAsync,\n  rdxReturnToWelcomeAsync,\n  rdxCreateWebSocketAndPuzzleAsync,\n  rdxRotateExistingPuzzleAsync,\n  rdxValidateExistingPuzzleAsync,\n  rdxGoToNextLevelOfPuzzleAsync,\n};\n","import { constants } from 'application/constants';\n\nimport { IReduxPuzzleActions, IReduxPuzzleState, rdxActionTypes } from 'application/redux';\n\n\nconst puzzleInitialState: IReduxPuzzleState = {\n  puzzleIsWelcome: true,\n  puzzleLevel: 1,\n  puzzleLevelPassword: '',\n  puzzleIsStarted: false,\n  puzzleIsOver: false,\n  puzzleIsLoading: false,\n  puzzleIsError: false,\n  puzzleData: [],\n  puzzleWebSocket: undefined,\n  puzzleRemainingValidationAttempt: constants.api.remainingValidationAttempt,\n  puzzleIsNextLevelAvailable: false,\n};\n\n/* eslint-disable indent */\nconst puzzleReducer = (state = puzzleInitialState, action: IReduxPuzzleActions): IReduxPuzzleState => {\n  switch (action.type) {\n    case rdxActionTypes.PUZZLE_STARTED:\n      return {\n        ...puzzleInitialState,\n        puzzleIsWelcome: false,\n        puzzleLevel: (action.actionGameLevel || puzzleInitialState.puzzleLevel),\n      };\n\n    case rdxActionTypes.PUZZLE_RETURNED:\n      return puzzleInitialState;\n\n    case rdxActionTypes.PUZZLE_LOADING:\n      return {\n        ...state,\n        puzzleIsLoading: true,\n        puzzleIsError: false,\n      };\n\n    case rdxActionTypes.PUZZLE_FAILED:\n      return {\n        ...state,\n        puzzleIsLoading: false,\n        puzzleIsError: true,\n      };\n\n    case rdxActionTypes.PUZZLE_CREATED:\n      return {\n        ...state,\n        puzzleIsStarted: true,\n        puzzleIsLoading: false,\n        puzzleIsError: false,\n        puzzleData: action.actionData,\n        puzzleWebSocket: action.actionWebSocket,\n      };\n\n    case rdxActionTypes.PUZZLE_UPDATED:\n      return {\n        ...state,\n        puzzleData: action.actionData,\n      };\n\n    case rdxActionTypes.PUZZLE_VALIDATIONATTEMPTDECREASED:\n      return {\n        ...state,\n        puzzleRemainingValidationAttempt: (state.puzzleRemainingValidationAttempt - 1),\n      };\n\n    case rdxActionTypes.PUZZLE_GAMEOVER:\n      return {\n        ...state,\n        puzzleIsOver: true,\n      };\n\n    case rdxActionTypes.PUZZLE_NEXTLEVELAVAILABLE:\n      return {\n        ...state,\n        puzzleIsNextLevelAvailable: true,\n        puzzleLevelPassword: (action.actionGamePassword || ''),\n      };\n\n    case rdxActionTypes.PUZZLE_NEXTLEVELCREATED:\n      return {\n        ...puzzleInitialState,\n        puzzleIsWelcome: false,\n        puzzleIsStarted: true,\n        puzzleLevel: (state.puzzleLevel + 1),\n        puzzleData: action.actionData,\n        puzzleWebSocket: state.puzzleWebSocket,\n      };\n\n    default:\n      return state;\n  }\n};\n/* eslint-enable indent */\n\nexport {\n  puzzleInitialState,\n  puzzleReducer,\n};\n","import { combineReducers } from 'redux';\n\nimport { puzzleReducer } from 'application/redux/reducers/puzzleReducer';\n\nconst appReducers = combineReducers({\n  puzzleReducer,\n});\n\nexport { appReducers };\n","import { constants } from 'application/constants';\n\nimport 'presentation/components/header/Header.scss';\n\nfunction Header(): JSX.Element {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <div className=\"header__logo\">\n          <svg className=\"header__logo__icon\" width=\"100\" height=\"100\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"><g fillRule=\"nonzero\"><path d=\"m57 20v35h-14v-35c0-1.6568542-1.3431458-3-3-3s-3 1.3431458-3 3v3h-14v-3c0-9.3888407 7.6111593-17 17-17s17 7.6111593 17 17z\" fill=\"#9e9e9e\" /><path d=\"m37 17c-1.6548028.0049422-2.9950578 1.3451972-3 3v3h3v-3c.0060761-1.065691.5770595-2.0481631 1.5-2.581-.4536919-.2709246-.9715827-.4155888-1.5-.419z\" fill=\"#707070\" /><path d=\"m40 3c-.506 0-1.005.032-1.5.076 8.7647399.78635209 15.4850546 8.1240686 15.5 16.924v35h3v-35c-.0132191-9.3833598-7.6166402-16.98678088-17-17z\" fill=\"#707070\" /><path d=\"m37 37v3c-.0000001 9.3888406-7.6111594 16.9999997-17 16.9999997s-16.99999986-7.6111591-17-16.9999997v-35h14v35c0 1.6568542 1.3431458 3 3 3s3-1.3431458 3-3v-3z\" fill=\"#9e9e9e\" /><path d=\"m17 43c.5284173-.0034112 1.0463081-.1480754 1.5-.419-.9229405-.5328369-1.4939239-1.515309-1.5-2.581v-35h-3v35c.0049422 1.6548028 1.3451972 2.9950578 3 3z\" fill=\"#707070\" /><path d=\"m34 37v3c-.0149454 8.7999314-6.7352601 16.1376479-15.5 16.924.5.044.994.076 1.5.076 9.3833598-.0132191 16.9867809-7.6166402 17-17v-3z\" fill=\"#707070\" /><path d=\"m19 3c.0028231.53059053-.2101411 1.0395388-.59 1.41-.3704612.3798589-.8794095.59282307-1.41.59h-14c-1.10320187-.0032948-1.9967052-.89679813-2-2-.00282307-.53059053.2101411-1.0395388.59-1.41.3704612-.3798589.87940947-.59282307 1.41-.59h14c1.1032019.0032948 1.9967052.89679813 2 2z\" fill=\"#cfd8dc\" /><path d=\"m17 1h-3c1.1032019.0032948 1.9967052.89679813 2 2 .0028231.53059053-.2101411 1.0395388-.59 1.41-.3704612.3798589-.8794095.59282307-1.41.59002771l3-.00002771c.5305905.00282307 1.0395388-.2101411 1.41-.59.3798589-.3704612.5928231-.87940947.59-1.41-.0032948-1.10320187-.8967981-1.9967052-2-2z\" fill=\"#9e9e9e\" /><rect id=\"Rectangle-path\" fill=\"#ff9801\" height=\"14\" rx=\"2\" width=\"18\" x=\"21\" y=\"23\" /><path d=\"m37 23h-3c1.1032019.0032948 1.9967052.8967981 2 2v10c-.0032948 1.1032019-.8967981 1.9967052-2 2h3c1.1032019-.0032948 1.9967052-.8967981 2-2v-10c-.0032948-1.1032019-.8967981-1.9967052-2-2z\" fill=\"#f57c00\" /><path d=\"m59 57c-.0081672 1.1011688-.8988312 1.9918328-2 2h-14c-1.1032019-.0032948-1.9967052-.8967981-2-2 .0081672-1.1011688.8988312-1.9918328 2-2h14c1.1032019.0032948 1.9967052.8967981 2 2z\" fill=\"#cfd8dc\" /><path d=\"m57 55h-3c1.1032019.0032948 1.9967052.8967981 2 2-.0081672 1.1011688-.8988312 1.9918328-2 2h3c1.1011688-.0081672 1.9918328-.8988312 2-2-.0032948-1.1032019-.8967981-1.9967052-2-2z\" fill=\"#9e9e9e\" /><path d=\"m58 54.184v-34.184c-.0000001-9.9411254-8.0588746-17.99999973-18-17.99999973s-17.9999999 8.05887433-18 17.99999973v2.184c-1.1943509.4222546-1.9947486 1.5492146-2 2.816v10c.0052514 1.2667854.8056491 2.3937454 2 2.816v2.184c0 1.1045695-.8954305 2-2 2s-2-.8954305-2-2v-34.184c1.3765475-.48485233 2.2026937-1.89184415 1.9553873-3.33017801-.2473064-1.43833387-1.49595-2.48858739-2.9553873-2.48582199h-14c-1.45943726-.0027654-2.70808095 1.04748812-2.95538732 2.48582199-.24730638 1.43833386.57883984 2.84532568 1.95538732 3.33017801v34.184c0 9.9411255 8.0588745 18 18 18s18-8.0588745 18-18v-2.184c1.1943509-.4222546 1.9947486-1.5492146 2-2.816v-10c-.0052514-1.2667854-.8056491-2.3937454-2-2.816v-2.184c0-1.1045695.8954305-2 2-2s2 .8954305 2 2v34.184c-1.3765475.4848523-2.2026937 1.8918441-1.9553873 3.330178s1.49595 2.4885874 2.9553873 2.485822h14c1.4594373.0027654 2.7080809-1.0474881 2.9553873-2.485822s-.5788398-2.8453257-1.9553873-3.330178zm-56-51.184c0-.55228475.44771525-1 1-1h14c.5522847 0 1 .44771525 1 1s-.4477153 1-1 1h-14c-.55228475 0-1-.44771525-1-1zm34 37c0 8.836556-7.163444 16-16 16s-16-7.163444-16-16v-34h12v34c0 2.209139 1.790861 4 4 4s4-1.790861 4-4v-2h12zm2-5c0 .5522847-.4477153 1-1 1h-14c-.5522847 0-1-.4477153-1-1v-10c0-.5522847.4477153-1 1-1h14c.5522847 0 1 .4477153 1 1zm2-19c-2.209139 0-4 1.790861-4 4v2h-12v-2c0-8.836556 7.163444-16 16-16s16 7.163444 16 16v34h-12v-34c0-2.209139-1.790861-4-4-4zm17 42h-14c-.5522847 0-1-.4477153-1-1s.4477153-1 1-1h14c.5522847 0 1 .4477153 1 1s-.4477153 1-1 1z\" fill=\"#000\" /><g fill=\"#f5f5f5\"><path d=\"m7 12c-.55228475 0-1-.4477153-1-1v-2c0-.55228475.44771525-1 1-1s1 .44771525 1 1v2c0 .5522847-.44771525 1-1 1z\" /><path d=\"m7 30c-.55228475 0-1-.4477153-1-1v-14c0-.5522847.44771525-1 1-1s1 .4477153 1 1v14c0 .5522847-.44771525 1-1 1z\" /></g></g></svg>\n          <h1 className=\"header__logo__text\">{constants.app.name}</h1>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import { constants } from 'application/constants';\n\nimport 'presentation/components/footer/Footer.scss';\n\nfunction Footer(): JSX.Element {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <div className=\"footer__copyright\">\n          <p className=\"footer__copyright__text\">&copy; {new Date().getFullYear()} {constants.app.name}. {constants.text.copyright}</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import Header from 'presentation/components/header/Header';\nimport Footer from 'presentation/components/footer/Footer';\n\nimport 'presentation/components/layout/Layout.scss';\n\ntype TChildren = React.ReactNode\n  | JSX.Element\n  | JSX.Element[]\n  | string\n  | string[]\n  | React.ReactChild\n  | React.ReactChild[];\n\ninterface ILayout {\n  children?: TChildren;\n}\n\nfunction Layout({ children }: ILayout): JSX.Element {\n\n  return (\n    <>\n      <Header />\n      <main className=\"layout\">\n        <div className=\"layout__container\">\n          <div className=\"layout__content\">\n            {children}\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { FiPlay as IconPlay, FiHelpCircle as IconAchievement } from 'react-icons/fi';\nimport { HiLockClosed as IconLock } from 'react-icons/hi';\n\nimport { constants } from 'application/constants';\nimport { localStorageGetItem } from 'application/helpers';\nimport { rdxStartPuzzleAsync } from 'application/redux';\n\nimport 'presentation/components/welcome/Welcome.scss';\n\nfunction Welcome(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const buttonStartHandler = (gameLevel: number): void => {\n    dispatch(rdxStartPuzzleAsync(gameLevel));\n  };\n\n  return (\n    <div className=\"welcome\">\n\n      <div className=\"welcome__head\">\n        <h1 className=\"welcome__head__title\">{constants.text.welcomeTitle}</h1>\n        <p className=\"welcome__head__description\">{constants.text.welcomeDescription}</p>\n      </div>\n\n      <div className=\"welcome__levels\">\n        <div className=\"welcome__level welcome__level--head\">\n          <div className=\"welcome__level__key key--level\">{constants.text.welcomeLevel}</div>\n          <div className=\"welcome__level__key key--achievement\">{constants.text.welcomeAchievement}</div>\n          <div className=\"welcome__level__key key--play\">{constants.text.welcomePlay}</div>\n        </div>\n\n        {Object.entries(constants.localStorageKeys).map(([, localKeyValue], localKeyIndex) => {\n          const levelAchievement = localStorageGetItem(localKeyValue);\n          const prevLevelHasAchieved = localStorageGetItem(`${constants.localStorageKeyPrefix}${localKeyIndex}`);\n          const levelCanPlay = localKeyIndex === 0 || prevLevelHasAchieved;\n          const gameLevel = localKeyIndex + 1;\n          return (\n            <div key={localKeyIndex} className=\"welcome__level\">\n              <div className={`welcome__level__key key--level ${!levelCanPlay ? 'welcome__level__key--locked' : ''}`}>\n                <span>{constants.text.levelPrefix} {gameLevel}</span>\n                {!levelCanPlay && <IconLock className=\"welcome__level__key__icon--lock\" />}\n              </div>\n              <div className=\"welcome__level__key key--achievement\">{levelAchievement || <IconAchievement className=\"welcome__level__key__icon--achievement\" />}</div>\n              <div className=\"welcome__level__key key--play\">\n                <button type=\"button\" className={`welcome__level__button ${levelCanPlay ? '' : 'welcome__level__button--passive'}`} onClick={levelCanPlay ? () => buttonStartHandler(gameLevel) : undefined}>\n                  <IconPlay />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n    </div>\n  );\n}\n\nexport default Welcome;\n","import { FiRotateCw as IconLoading } from 'react-icons/fi';\n\nimport { constants } from 'application/constants';\n\nfunction GameLoading(): JSX.Element {\n  return (\n    <div className=\"game game--loading\">\n      <IconLoading className=\"game--loading__icon\" />\n      <p className=\"game--loading__message\">{constants.messages.loading}</p>\n    </div>\n  );\n}\n\nexport default GameLoading;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FiAlertCircle as IconFailure, FiCornerUpLeft as IconReturn } from 'react-icons/fi';\n\nimport { constants } from 'application/constants';\nimport { rdxSelectorPuzzle, rdxReturnToWelcomeAsync } from 'application/redux';\n\nfunction GameError(): JSX.Element {\n  const dispatch = useDispatch();\n  const { puzzleWebSocket } = useSelector(rdxSelectorPuzzle);\n\n  const buttonReturnHandler = () => {\n    if (puzzleWebSocket) {\n      dispatch(rdxReturnToWelcomeAsync(puzzleWebSocket));\n    }\n  };\n\n  return (\n    <div className=\"game game--failure\">\n      <IconFailure className=\"game--failure__icon\" />\n      <p className=\"game--failure__message\">{constants.messages.failure}</p>\n      <button type=\"button\" className=\"game--failure__button\" onClick={buttonReturnHandler}>\n        <IconReturn className=\"game--failure__button__icon\" />\n        <span>{constants.text.buttonReturn}</span>\n      </button>\n    </div>\n  );\n}\n\nexport default GameError;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FiFrown as IconGameOver, FiCornerUpLeft as IconReturn } from 'react-icons/fi';\n\nimport { constants } from 'application/constants';\nimport { rdxSelectorPuzzle, rdxReturnToWelcomeAsync } from 'application/redux';\n\nfunction GameOver(): JSX.Element {\n  const dispatch = useDispatch();\n  const { puzzleWebSocket } = useSelector(rdxSelectorPuzzle);\n\n  const buttonReturnHandler = () => {\n    if (puzzleWebSocket) {\n      dispatch(rdxReturnToWelcomeAsync(puzzleWebSocket));\n    }\n  };\n\n  return (\n    <div className=\"game__over\">\n      <IconGameOver className=\"game__over__icon\" />\n      <p className=\"game__over__message\">{constants.text.gameIsOver}</p>\n      <button type=\"button\" className=\"game__over__button\" onClick={buttonReturnHandler}>\n        <IconReturn className=\"game__over__button__icon\" />\n        <span>{constants.text.buttonReturn}</span>\n      </button>\n    </div>\n  );\n}\n\nexport default GameOver;\n","enum EWebSocketReadyState {\n  CONNECTING = 0,\n  OPEN = 1,\n  CLOSING = 2,\n  CLOSED = 3,\n}\n\nconst mapWebSocketReadyState = new Map<number, string>([\n  [EWebSocketReadyState.CONNECTING, `(Socket has been created. The connection is not yet open.)`],\n  [EWebSocketReadyState.OPEN, `(The connection is open and ready to communicate.)`],\n  [EWebSocketReadyState.CLOSING, `(The connection is in the process of closing.)`],\n  [EWebSocketReadyState.CLOSED, `(The connection is closed or couldn't be opened.)`],\n]);\n\nconst getWebSocketReadyStateDesc = (enumeration?: number): string => {\n  return mapWebSocketReadyState.get(enumeration || EWebSocketReadyState.CLOSED) || '';\n};\n\nexport type {\n  EWebSocketReadyState,\n};\n\nexport {\n  getWebSocketReadyStateDesc,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FiCheckCircle as IconValidate, FiFrown as IconGiveUp } from 'react-icons/fi';\n\nimport { constants } from 'application/constants';\nimport { getWebSocketReadyStateDesc } from 'application/enumerations';\n\nimport { rdxSelectorPuzzle, rdxReturnToWelcomeAsync, rdxValidateExistingPuzzleAsync } from 'application/redux';\n\nfunction GameActions(): JSX.Element {\n  const dispatch = useDispatch();\n  const { puzzleRemainingValidationAttempt, puzzleWebSocket, puzzleLevel } = useSelector(rdxSelectorPuzzle);\n\n  const buttonValidateHandler = () => {\n    if (puzzleWebSocket) {\n      dispatch(rdxValidateExistingPuzzleAsync(puzzleWebSocket, puzzleLevel));\n    }\n  };\n\n  const buttonReturnHandler = () => {\n    if (puzzleWebSocket) {\n      dispatch(rdxReturnToWelcomeAsync(puzzleWebSocket));\n    }\n  };\n\n  return (\n    <div className=\"game__actions\">\n      <span className=\"game__actions__level\">{constants.text.levelPrefix} {puzzleLevel}</span>\n      <div className=\"game__actions__buttons\">\n        <button type=\"button\" className=\"game__actions__button\" onClick={buttonReturnHandler}>\n          <IconGiveUp className=\"game__actions__button__icon\" />\n          <span>{constants.text.buttonGiveUp}</span>\n        </button>\n        <button type=\"button\" className=\"game__actions__button game__actions__button--validate\" onClick={buttonValidateHandler}>\n          <IconValidate className=\"game__actions__button__icon\" />\n          <span>{constants.text.buttonValidate}</span>\n        </button>\n      </div>\n      <div className=\"game__actions__info\">\n        <p className=\"game__actions__info__message\">\n          <span>{constants.text.validationRemainingAttempt}</span>\n          <span className=\"game__actions__info__message__count\">{puzzleRemainingValidationAttempt}</span>\n        </p>\n        <p className={`game__actions__info__message message--small state--${puzzleWebSocket?.readyState || ''}`}>{getWebSocketReadyStateDesc(puzzleWebSocket?.readyState)}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default GameActions;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FiGift as IconWellDone, FiArrowRightCircle as IconNextLevel, FiCornerUpLeft as IconReturn } from 'react-icons/fi';\n\nimport { constants } from 'application/constants';\nimport { rdxSelectorPuzzle, rdxReturnToWelcomeAsync, rdxGoToNextLevelOfPuzzleAsync } from 'application/redux';\n\nfunction GameNextLevel(): JSX.Element {\n  const dispatch = useDispatch();\n  const { puzzleWebSocket, puzzleLevelPassword, puzzleLevel } = useSelector(rdxSelectorPuzzle);\n\n  const buttonReturnHandler = () => {\n    if (puzzleWebSocket) {\n      dispatch(rdxReturnToWelcomeAsync(puzzleWebSocket));\n    }\n  };\n\n  const buttonNextLevelHandler = () => {\n    if (puzzleWebSocket) {\n      dispatch(rdxGoToNextLevelOfPuzzleAsync(puzzleWebSocket, puzzleLevel));\n    }\n  };\n\n  return (\n    <div className=\"game__actions\">\n      <div className=\"game__actions__achievement\">\n        <IconWellDone className=\"game__actions__achievement__icon\" />\n        <p className=\"game__actions__achievement__message\">\n          <span>{constants.text.nextLevel}</span>\n          <span className=\"game__actions__achievement__message__highlight\">{puzzleLevelPassword}</span>\n        </p>\n      </div>\n      <div className=\"game__actions__buttons\">\n        <button type=\"button\" className=\"game__actions__button\" onClick={buttonReturnHandler}>\n          <IconReturn className=\"game__actions__button__icon\" />\n          <span>{constants.text.buttonReturn}</span>\n        </button>\n        {puzzleLevel < constants.api.maximumGameLevel &&\n          <button type=\"button\" className=\"game__actions__button game__actions__button--next\" onClick={buttonNextLevelHandler}>\n            <IconNextLevel className=\"game__actions__button__icon\" />\n            <span>{constants.text.buttonNext}</span>\n          </button>\n        }\n        {puzzleLevel >= constants.api.maximumGameLevel &&\n          <p className=\"game__actions__finish\">{constants.text.gameIsFinished}</p>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default GameNextLevel;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { rdxSelectorPuzzle, rdxRotateExistingPuzzleAsync } from 'application/redux';\n\ninterface IButtonRotateHandler {\n  positionX: number;\n  positionY: number;\n}\n\nfunction GamePuzzle(): JSX.Element {\n  const dispatch = useDispatch();\n  const { puzzleData, puzzleWebSocket, puzzleRemainingValidationAttempt } = useSelector(rdxSelectorPuzzle);\n\n  const [stateValidateAttempt, setStateValidateAttempt] = useState<number>(puzzleRemainingValidationAttempt);\n  const [stateBounceClassName, setStateBounceClassName] = useState<string>('');\n  useEffect(() => {\n    if (stateValidateAttempt !== puzzleRemainingValidationAttempt && puzzleRemainingValidationAttempt > 0) {\n      setStateValidateAttempt(puzzleRemainingValidationAttempt);\n      setStateBounceClassName('game__puzzle--bounce');\n      const toggleClassDelay = setTimeout(() => {\n        setStateBounceClassName('');\n        clearTimeout(toggleClassDelay);\n      }, 600);\n    }\n  }, [stateValidateAttempt, puzzleRemainingValidationAttempt]);\n\n  const buttonRotateHandler = ({ positionX, positionY }: IButtonRotateHandler): void => {\n    if (puzzleWebSocket) {\n      dispatch(rdxRotateExistingPuzzleAsync({ webSocket: puzzleWebSocket, positionX, positionY }));\n    }\n  };\n\n  return (\n    <div className={`game__puzzle ${stateBounceClassName}`}>\n      {puzzleData?.map((row: string[], rowIndex: number) => {\n        return (\n          <div key={rowIndex} className=\"game__row\">\n            {row?.map((item: string, itemIndex: number) => {\n              return (\n                <button key={itemIndex} className={`game__item game__item--attempt--${stateValidateAttempt}`} onClick={() => buttonRotateHandler({ positionX: itemIndex, positionY: rowIndex })}>{item}</button>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default GamePuzzle;\n","import { useLayoutEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { rdxSelectorPuzzle, rdxCreateWebSocketAndPuzzleAsync } from 'application/redux';\n\nimport GameLoading from 'presentation/components/game/partials/GameLoading';\nimport GameError from 'presentation/components/game/partials/GameError';\nimport GameOver from 'presentation/components/game/partials/GameOver';\nimport GameActions from 'presentation/components/game/partials/GameActions';\nimport GameNextLevel from 'presentation/components/game/partials/GameNextLevel';\nimport GamePuzzle from 'presentation/components/game/partials/GamePuzzle';\n\nimport 'presentation/components/game/Game.scss';\n\nfunction Game(): JSX.Element {\n  const dispatch = useDispatch();\n  const { puzzleLevel, puzzleIsStarted, puzzleIsLoading, puzzleIsError, puzzleIsOver, puzzleIsNextLevelAvailable } = useSelector(rdxSelectorPuzzle);\n\n  useLayoutEffect(() => {\n    if (!puzzleIsStarted) {\n      dispatch(rdxCreateWebSocketAndPuzzleAsync(puzzleLevel));\n    }\n  }, [dispatch, puzzleIsStarted, puzzleLevel]);\n\n\n  if (puzzleIsLoading) {\n    return <GameLoading />;\n  }\n\n  if (puzzleIsError) {\n    return <GameError />;\n  }\n\n  return (\n    <div className={`game ${puzzleIsNextLevelAvailable ? 'game--succeeded' : ''} ${puzzleIsOver ? 'game--failed' : ''}`}>\n      {puzzleIsOver && <GameOver />}\n      {(!puzzleIsOver && !puzzleIsNextLevelAvailable) && <GameActions />}\n      {puzzleIsNextLevelAvailable && <GameNextLevel />}\n      <GamePuzzle />\n    </div>\n  );\n}\n\nexport default Game;\n","import { useSelector } from 'react-redux';\n\nimport { rdxSelectorPuzzle } from 'application/redux';\n\nimport Layout from 'presentation/components/layout/Layout';\nimport Welcome from 'presentation/components/welcome/Welcome';\nimport Game from 'presentation/components/game/Game';\n\nfunction App(): JSX.Element {\n  const { puzzleIsWelcome } = useSelector(rdxSelectorPuzzle);\n\n  return (\n    <Layout>\n      {puzzleIsWelcome && <Welcome />}\n      {!puzzleIsWelcome && <Game />}\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { appReducers } from 'application/redux/reducers';\n\nimport App from 'presentation/App';\n\nimport 'presentation/styles/index.scss';\n\nconst PipePuzzleApp = () => {\n  const store = createStore(appReducers, composeWithDevTools(applyMiddleware(thunk)));\n  return (\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  );\n};\n\nconst pipePuzzleRootElement = window.document.getElementById('PipePuzzleApp');\nif (pipePuzzleRootElement?.hasChildNodes()) {\n  hydrate(<PipePuzzleApp />, pipePuzzleRootElement);\n} else {\n  render(<PipePuzzleApp />, pipePuzzleRootElement);\n}\n"],"sourceRoot":""}